// variables

// font colours + pseudo states
$primaryYellow: #ffd300; // 15, 15, 15
$primaryBlack: #494545;
$primaryWhite: #ffffff; // 255, 255, 255

// Hover
$primaryHoverRed: #e06666;
$primaryHoverBlack: #6c717d;

// background colors
$primaryBackgroundPine: #2b331b; // 43, 51, 27
$primaryBackgroundGreen: #364419; // 15, 15, 15

// anchor tags on hover & focus
$anchorTagHoverFocus: "a:focus, a:hover";

// mixins/functions

// font sizes turn into rem values
@mixin fontSize($sizeValue) {
  font-size: $sizeValue * 1px;
  font-size: ($sizeValue/10) * 1rem / 2;
}

// Centering
@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Positioning
@mixin position($type, $top, $right, $bottom, $left) {
  position: $type;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

// responsive
$breakpoints: (
  "phone": 400px,
  "phone-wide": 480px,
  "phone-tablet": 560px,
  "tablet-small": 640px,
  "tablet": 768px,
  "tablet-wide": 1024px,
  "desktop": 1248px,
  "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
